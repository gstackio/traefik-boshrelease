---

resources:
  - name: gk-ops-image
    type: docker-image
    source:
      repository: harbor.ci.gstack.io/gstack/gk-ops
      username: ((docker_registry_username))
      password: ((docker-registry-password))

  - name: traefik-gh-release
    type: github-release
    source:
      owner: containous
      repository: traefik
      pre_release: false
      tag_filter: v(1\.\d+\.\d+)
      access_token: ((github-access-token))

  - name: gk-consul-boshrelease-gh-release
    type: github-release
    source:
      owner: gstackio
      repository: gk-consul-boshrelease
      pre_release: false
      tag_filter: v(\d+\.\d+\.\d+)
      access_token: ((github-access-token))

  - name: gk-automation
    type: git
    source:
      uri: git@github.com:gstackio/gk-automation.git
      branch: master
      private_key: ((github-private-key))

  - name: bpm-bosh-io-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bpm-release

  - name: traefik-boshrelease-master
    type: git
    source:
      uri: ((traefik_release_git_uri))
      branch: master
      private_key: ((github-private-key))

jobs:
  - name: detect-traefik
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: traefik-gh-release
            trigger: true
            params: { globs: [ "*_linux-amd64" ] }
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: checkout-branch
        image: gk-ops-image
        file: gk-automation/tasks/git/checkout-branch.yml
        input_mapping:
          artifact-version: traefik-gh-release
          repo:             traefik-boshrelease-master
        params:
          BASE_BRANCH:          master
          BRANCH_NAME_TEMPLATE: bump-traefik-${artifact_version}
          GITHUB_PRIVATE_KEY:   ((github-private-key))

      - task: gzip-artifact
        image: gk-ops-image
        file: gk-automation/tasks/gzip-file.yml
        input_mapping:
          artifact: traefik-gh-release
        params:
          ARTIFACT_FILE: traefik_linux-amd64

      - task: bump-blob
        image: gk-ops-image
        file: gk-automation/tasks/boshrelease/bump-blob.yml
        input_mapping:
          artifact-release: artifact-gzipped
          boshrelease-repo: traefik-boshrelease-master
        params:
          ARTIFACT_HUMAN_NAME:      Traefik binary
          ARTIFACT_FILE_TEMPLATE:   traefik_linux-amd64.gz
          BLOB_PATH_AWK_PATTERN:    traefik\/traefik-[0-9.]+_linux-amd64\.gz
          BLOB_PATH_TEMPLATE:       traefik/traefik-${blob_version}_linux-amd64.gz
          PACKAGE_NAME:             traefik
          ARTIFACT_REF_VARS_PREFIX: TRAEFIK

      - task: git-commit
        image: gk-ops-image
        file: gk-automation/tasks/git/commit.yml
        input_mapping:
          repo: boshrelease-repo-bumped
        params:
          GIT_COMMIT_NAME:  ((git-commit-name))
          GIT_COMMIT_EMAIL: ((git-commit-email))

      - task: upload-blobs
        image: gk-ops-image
        file: gk-automation/tasks/boshrelease/upload-blobs.yml
        input_mapping:
          boshrelease-repo: repo-committed
        params:
          S3_ACCESS_KEY_ID:     ((aws-access-key))
          S3_SECRET_ACCESS_KEY: ((aws-secret-key))

      - task: git-commit
        image: gk-ops-image
        file: gk-automation/tasks/git/commit.yml
        input_mapping:
          repo: traefik-boshrelease-blobs-uploaded
        params:
          GIT_COMMIT_MESSAGE: "Uploaded blob for new Traefik binary"
          GIT_COMMIT_NAME:    ((git-commit-name))
          GIT_COMMIT_EMAIL:   ((git-commit-email))

      - task: git-push
        image: gk-ops-image
        file: gk-automation/tasks/git/push-to-branch.yml
        input_mapping:
          repo:        repo-committed
        params:
          GIT_URI:            ((traefik_release_git_uri))
          GITHUB_PRIVATE_KEY: ((github-private-key))

      - task: compose-pr
        image: gk-ops-image
        file: gk-automation/tasks/boshrelease/compose-pr.yml
        params:
          ARTIFACT_HUMAN_NAME:    Traefik
          RELEASE_NOTES_URL_TMPL: https://github.com/containous/traefik/releases/tag/v${latest_version}

      - task: submit-pr
        image: gk-ops-image
        file: gk-automation/tasks/github/submit-pr.yml
        input_mapping:
          repo: repo-pushed
        params:
          GH_ACCESS_TOKEN: ((github-access-token))
          GH_OWNER:        gstackio
          GH_REPO:         traefik-boshrelease

  - name: detect-consul
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: gk-consul-boshrelease-gh-release
            trigger: true
            params: { globs: [] }
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: bump-consul
        image: gk-ops-image
        input_mapping:
          boshrelease-repo: traefik-boshrelease-master
        config:
          platform: linux
          inputs:
            - name: gk-consul-boshrelease-gh-release
            - name: boshrelease-repo
          outputs:
            - name: boshrelease-repo-bumped
            - name: commit-info
          run:
            path: bash
            args:
              - -c
              - |
                set -ueo pipefail

                consul_release_version=$(< gk-consul-boshrelease-gh-release/version)
                echo "version: ${consul_release_version}"

                git clone "boshrelease-repo" "boshrelease-repo-bumped"

                git clone https://github.com/gstackio/gk-consul-boshrelease.git
                pushd "gk-consul-boshrelease" > /dev/null
                    git checkout "v${consul_release_version}"
                popd > /dev/null

                pushd "boshrelease-repo-bumped" > /dev/null
                    consul_release_json=$(
                        bosh interpolate "../gk-consul-boshrelease/deploy/gk-consul.yml" \
                            --path "/releases/name=gk-consul" \
                        | spruce json "/dev/stdin" \
                        | jq --compact-output '{
                            "name": .name, "version": .version,
                            "url": .url, "sha1": .sha1
                          }')

                    opsfile_path=deployment/operations/clustering.yml
                    releases_line_number=$(awk '/^- path: \/releases\/name=gk-consul\?$/{ print NR; exit }' "${opsfile_path}")
                    opsfile_head=$(head -n $((${releases_line_number} - 1)) "${opsfile_path}")
                    release_updated=$(bosh interpolate /dev/stdin <<YAML
                - path: /releases/name=gk-consul?
                  type: replace
                  value: ${consul_release_json}
                YAML
                    )
                    cat > "${opsfile_path}" <<YAML
                ${opsfile_head}

                ${release_updated}
                YAML
                popd > /dev/null

                echo "Bump Consul BOSH release to version ${consul_release_version}" \
                    > commit-info/commit-message

      - task: git-commit
        image: gk-ops-image
        file: gk-automation/tasks/git/commit.yml
        input_mapping:
          repo: boshrelease-repo-bumped
        params:
          GIT_COMMIT_NAME:  ((git-commit-name))
          GIT_COMMIT_EMAIL: ((git-commit-email))

      - put: traefik-boshrelease-master
        params:
          repository: repo-committed
          rebase:     true

  - name: detect-bpm
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: bpm-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: bump-bpm
        image: gk-ops-image
        file: gk-automation/tasks/boshrelease/depl-manifest-release-bump.yml
        input_mapping:
          bosh-io-release: bpm-bosh-io-release
          repo:            traefik-boshrelease-master
        params:
          RELEASE_NAME:  bpm
          MANIFEST_PATH: deployment/traefik.yml

      - task: git-commit
        image: gk-ops-image
        file: gk-automation/tasks/git/commit.yml
        input_mapping:
          repo: repo-bumped
        params:
          GIT_COMMIT_NAME:  ((git-commit-name))
          GIT_COMMIT_EMAIL: ((git-commit-email))

      - put: traefik-boshrelease-master
        params:
          repository: repo-committed
          rebase:     true
