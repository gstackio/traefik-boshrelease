---

resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource
      username: ((dockerhub-username))
      password: ((dockerhub-password))

resources:
  - name: gk-ops-image
    type: docker-image
    source:
      repository: gstack/gk-ops
      username: ((dockerhub-username))
      password: ((dockerhub-password))

  - name: traefik-gh-release
    type: github-release
    source:
      owner: containous
      repository: traefik
      pre_release: false
      tag_filter: v(1\.\d+\.\d+)
      access_token: ((github-access-token))

  - name: gk-consul-boshrelease-gh-release
    type: github-release
    source:
      owner: gstackio
      repository: gk-consul-boshrelease
      pre_release: false
      tag_filter: v(\d+\.\d+\.\d+)
      access_token: ((github-access-token))

  - name: gk-automation
    type: git
    source:
      uri: git@github.com:gstackio/gk-automation.git
      branch: master
      private_key: ((github-private-key))

  - name: bpm-bosh-io-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bpm-release

  - name: traefik-boshrelease-master
    type: git
    source:
      uri: ((traefik_release_git_uri))
      branch: master
      private_key: ((github-private-key))

  - name: bump-info
    type: keyval

jobs:
  - name: detect-traefik
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: traefik-gh-release
            trigger: true
            params: { globs: [ "*_linux-amd64" ] }
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: add-blob
        input_mapping:
          traefik-boshrelease: traefik-boshrelease-master
        image: gk-ops-image
        config:
          platform: linux
          inputs:
            - name: traefik-gh-release
            - name: traefik-boshrelease
          outputs:
            - name: traefik-boshrelease-bumped
            - name: bump-info
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                find traefik-gh-release -ls

                echo tag:        $(< traefik-gh-release/tag)
                echo version:    $(< traefik-gh-release/version)
                echo commit_sha: $(< traefik-gh-release/commit_sha)

                latest_traefik_version=$(< traefik-gh-release/version)
                gzip -c9 "traefik-gh-release/traefik_linux-amd64" > "traefik-${latest_traefik_version}_linux-amd64.gz"

                git clone "traefik-boshrelease" "traefik-boshrelease-bumped"
                branch_name="bump-traefik-${latest_traefik_version}"

                pushd "traefik-boshrelease-bumped" > /dev/null
                    git checkout "master"
                    git pull

                    if [[ ${branch_name} != "master" ]]; then
                        git checkout -b "${branch_name}"
                    fi

                    bosh blobs

                    traefik_old_blob_path=$(bosh blobs | awk '/traefik\/traefik-[0-9.]+_linux-amd64\.gz/{print $1}')

                    bosh remove-blob "${traefik_old_blob_path}"
                    bosh add-blob "../traefik-${latest_traefik_version}_linux-amd64.gz" "traefik/traefik-${latest_traefik_version}_linux-amd64.gz"

                    bosh blobs

                    echo "Updating 'scripts/add-blobs.sh' utility."
                    traefik_sha256=$(bosh blobs --column path --column digest | awk '/traefik\/traefik-[0-9.]+_linux-amd64\.gz/{sub("^sha256:", "", $2); print $2}')
                    sed -i -re "/TRAEFIK_VERSION=/s/=[0-9.]+\$/=${latest_traefik_version}/" "scripts/add-blobs.sh"
                    sed -i -re "/TRAEFIK_SHA256=/s/=[0-9a-f]+\$/=${traefik_sha256}/" "scripts/add-blobs.sh"
                    grep -E -nC 2 "TRAEFIK_(VERSION|SHA256)=" "scripts/add-blobs.sh"

                    git config --global "color.ui" "always"
                    git status
                    git diff | cat

                    git config --global "user.name" "((git-commit-name))"
                    git config --global "user.email" "((git-commit-email))"

                    if [[ -z "$(git status --porcelain)" ]]; then
                        echo "INFO: nothing to commit. Skipping."
                    else
                        git add .
                        git commit -m "Bump Traefik binary to version ${latest_traefik_version}"
                    fi
                popd > /dev/null


                # Write properties to the keyval output resource

                mkdir -p bump-info
                echo "latest_traefik_version=${latest_traefik_version}" >> bump-info/keyval.properties
                echo "branch_name=${branch_name}"                       >> bump-info/keyval.properties

      - put: bump-info
        params:
          file: bump-info/keyval.properties

      - task: upload-blobs
        params:
          S3_ACCESS_KEY_ID: ((aws-access-key))
          S3_SECRET_ACCESS_KEY: ((aws-secret-key))
        image: gk-ops-image
        config:
          platform: linux
          inputs:
            - name: traefik-boshrelease-bumped
          outputs:
            - name: traefik-boshrelease-blobs-uploaded
          params:
            S3_ACCESS_KEY_ID:
            S3_SECRET_ACCESS_KEY:
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                git clone "traefik-boshrelease-bumped" "traefik-boshrelease-blobs-uploaded"
                cp -Rp "traefik-boshrelease-bumped/blobs" "traefik-boshrelease-blobs-uploaded"

                set +x
                cat <<EOF > "traefik-boshrelease-blobs-uploaded/config/private.yml"
                ---
                blobstore:
                  options:
                    access_key_id: ${S3_ACCESS_KEY_ID}
                    secret_access_key: ${S3_SECRET_ACCESS_KEY}
                EOF
                set -x

                pushd "traefik-boshrelease-blobs-uploaded" > /dev/null
                    bosh upload-blobs

                    git config --global "user.name" "((git-commit-name))"
                    git config --global "user.email" "((git-commit-email))"

                    git add "config/blobs.yml"
                    git commit -m "Uploaded blob for new Traefik binary"
                popd > /dev/null

      - task: git-push
        image: gk-ops-image
        input_mapping:
          branch-info: bump-info
          repo: traefik-boshrelease-blobs-uploaded
        params:
          GIT_URI: ((traefik_release_git_uri))
          GITHUB_PRIVATE_KEY: ((github-private-key))
        file: gk-automation/boshrelease/git-push.yml

      - task: submit-pr
        params:
          GH_ACCESS_TOKEN: ((github-access-token))
          GH_OWNER: gstackio
          GH_REPO: traefik-boshrelease
        image: gk-ops-image
        config:
          platform: linux
          inputs:
            - name: bump-info
          params:
            GH_ACCESS_TOKEN:
            GH_OWNER:
            GH_REPO:
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                grep -vE "^(UPDATED|UUID)=" "bump-info/keyval.properties" \
                    | sed -r -e 's/"/\"/g; s/=(.*)$/="\1"/' \
                    > keyval.inc.bash
                source "keyval.inc.bash"

                pr_desc="Hi there!"
                pr_desc+="\\n"
                pr_desc+="\\nI noticed that the new Traefik v${latest_traefik_version} is out,"
                pr_desc+=" so I suggest we update this BOSH Release with the latest binary available."
                pr_desc+="\\n"
                pr_desc+="\\nHere in this PR, I've pulled that new binary in."
                pr_desc+=" I uploaded the blob to the release blobstore, and here is the result."
                pr_desc+="\\n"
                pr_desc+="\\nDon't hesitate to have a look at the release notes: https://github.com/containous/traefik/releases/tag/v${latest_traefik_version}"
                pr_desc+="\\nWhen it's okay to you, let's give it a shot, shall we?"
                pr_desc+="\\n"
                pr_desc+="\\nBest"

                # See also: https://developer.github.com/v3/pulls/#create-a-pull-request
                pr_data=$(jq -n \
                    --arg title "Bump Traefik to version ${latest_traefik_version}" \
                    --arg body "$(echo -e "${pr_desc}")" \
                    --arg head "${branch_name}" \
                    '{
                        "base": "master",
                        "title": $title,
                        "body": $body,
                        "head": $head,
                        "maintainer_can_modify": true
                    }')

                echo "Creating pull request: POST /repos/${GH_OWNER}/${GH_REPO}/pulls"
                # See also: https://developer.github.com/v3/
                curl --silent --fail \
                    --header "Accept: application/vnd.github.v3+json" \
                    --header "Authorization: token ${GH_ACCESS_TOKEN}" \
                    --request POST \
                    --url "https://api.github.com/repos/${GH_OWNER}/${GH_REPO}/pulls" \
                    --data-raw "${pr_data}"
                exit 0

  - name: detect-consul
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: gk-consul-boshrelease-gh-release
            trigger: true
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: bump-consul
        input_mapping:
          traefik-boshrelease: traefik-boshrelease-master
        image: gk-ops-image
        config:
          platform: linux
          inputs:
            - name: gk-consul-boshrelease-gh-release
            - name: traefik-boshrelease
          outputs:
            - name: traefik-boshrelease-bumped
            - name: bump-info
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                find gk-consul-boshrelease-gh-release -ls

                echo tag:        $(< gk-consul-boshrelease-gh-release/tag)
                echo version:    $(< gk-consul-boshrelease-gh-release/version)
                echo commit_sha: $(< gk-consul-boshrelease-gh-release/commit_sha)

                latest_consul_release_version=$(< gk-consul-boshrelease-gh-release/version)

                git clone "traefik-boshrelease" "traefik-boshrelease-bumped"
                branch_name="master"

                git clone https://github.com/gstackio/gk-consul-boshrelease.git
                pushd gk-consul-boshrelease > /dev/null
                    git checkout "v${latest_consul_release_version}"
                popd > /dev/null

                pushd "traefik-boshrelease-bumped" > /dev/null
                    git checkout "master"
                    git pull

                    if [[ ${branch_name} != "master" ]]; then
                        git checkout -b "${branch_name}"
                    fi

                    consul_release_json=$(
                        bosh interpolate "../gk-consul-boshrelease/deploy/gk-consul.yml" \
                            --path "/releases/name=gk-consul" \
                        | spruce json "/dev/stdin" \
                        | jq --compact-output '{
                            "name": .name, "version": .version,
                            "url": .url, "sha1": .sha1
                          }')

                    opsfile_path=deployment/operations/clustering.yml
                    release_updated=$(bosh interpolate /dev/stdin <<YAML
                - path: /releases/name=gk-consul?
                  type: replace
                  value: ${consul_release_json}
                YAML
                )
                    releases_line_number=$(awk '/^- path: \/releases\/name=gk-consul\?$/{ print NR; exit }' "${opsfile_path}")
                    opsfile_head=$(head -n $((${releases_line_number} - 1)) "${opsfile_path}")
                    cat > "${opsfile_path}" <<YAML
                ${opsfile_head}

                ${release_updated}
                YAML

                    git config --global "color.ui" "always"
                    git status
                    git diff | cat

                    git config --global "user.name" "((git-commit-name))"
                    git config --global "user.email" "((git-commit-email))"

                    git add .
                    git commit -m "Bump Consul BOSH release to version ${latest_consul_release_version}"
                popd > /dev/null


                # Write properties to the keyval output resource

                mkdir -p bump-info
                echo "latest_consul_release_version=${latest_consul_release_version}" >> bump-info/keyval.properties
                echo "branch_name=${branch_name}"                                     >> bump-info/keyval.properties

      - put: bump-info
        params:
          file: bump-info/keyval.properties

      - task: git-push
        image: gk-ops-image
        input_mapping:
          branch-info: bump-info
          repo: traefik-boshrelease-bumped
        params:
          GIT_URI: ((traefik_release_git_uri))
          GITHUB_PRIVATE_KEY: ((github-private-key))
        file: gk-automation/boshrelease/git-push.yml

  - name: detect-bpm
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: bpm-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: traefik-boshrelease-master
          - get: gk-automation
          - get: gk-ops-image

      - task: bump-bpm
        image: gk-ops-image
        input_mapping:
          bosh-io-release: bpm-bosh-io-release
          repo: traefik-boshrelease-master
        output_mapping:
          repo-bumped: traefik-boshrelease-bumped
        file: gk-automation/boshrelease/depl-manifest-release-bump.yml
        params:
          RELEASE_NAME: bpm
          MANIFEST_PATH: deployment/traefik.yml
          GIT_EMAIL: ((git-commit-email))
          GIT_NAME: ((git-commit-name))

      - put: bump-info
        params:
          file: bump-info/keyval.properties

      - task: git-push
        image: gk-ops-image
        input_mapping:
          branch-info: bump-info
          repo: traefik-boshrelease-bumped
        params:
          GIT_URI: ((traefik_release_git_uri))
          GITHUB_PRIVATE_KEY: ((github-private-key))
        file: gk-automation/boshrelease/git-push.yml
